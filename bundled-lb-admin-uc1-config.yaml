#The version of GKE to deploy or upgrade to. This is expected to match the version
# of gkectl you are using to control your deployment
# Absolute path to a GKE bundle on disk
bundlepath: "/var/lib/gke/bundles/gke-onprem-vsphere-${anthos_version}.tgz"
# Specify which vCenter resources to use for deployment
vcenter:
  # The credentials and address GKE should use to connect to vCenter
  credentials:
    address: "${vcenter_fqdn}"
    username: "${vcenter_user}"
    password: "${vcenter_pass}"
  datacenter: "${vcenter_datacenter}"
  datastore: "${vcenter_datastore}"
  cluster: "${vcenter_cluster}"
  network: "${deploy_network}"
  resourcepool: "${resource_pool}"
  # Provide the name for the persistent disk to be used by the deployment (ending
  # in .vmdk). Not required when adding additional user clusters
  datadisk: "gke-on-prem/gke-on-prem-data-disk.vmdk"
  # Provide the path to vCenter CA certificate pub key for SSL verification
  cacertpath: "/home/ubuntu/cluster/vspherecert.pem"
# Specify admin cluster settings for a fresh GKE On-Prem deployment. Omit this section
# and use the --adminconfig flag when adding a new user cluster to an existing deployment
admincluster:
  loadbalancerconfig:
    ipblockfilepath: admin-lb-ipblock.yaml
    vrid: 4
    vip: __ADMIN_LB_VIP__
    cpus: 4
    memorymb: 8192
    enableha: false
    antiaffinitygroups:
      enabled: false
  vips:
    # Used to connect to the Kubernetes API
    controlplanevip: "__ADMIN_K8S_API_VIP__"
    # Shared by all services for ingress traffic
    ingressvip: "__ADMIN_K8S_INGRESS_VIP__"
    # # Used for admin cluster addons (needed for multi cluster features). Must be the same
    # # across clusters
    addonsvip: "__ADMIN_K8S_ADDON_VIP__"
  # The Kubernetes service CIDR range for the cluster. Must not overlap with the pod
  # CIDR range
  serviceiprange: ${admin_service_cidr}
  # The Kubernetes pod CIDR range for the cluster. Must not overlap with the service
  # CIDR range
  podiprange: ${admin_pod_cidr}
# Specify settings when deploying a new user cluster. Used both with a fresh deployment
# or when adding a new cluster to an existing deployment.
usercluster:
  loadbalancerconfig:
    ipblockfilepath: usercluster-1-lb-ipblock.yaml
    vrid: 7
    vip: __USER_LB_VIP__
    cpus: 4
    memorymb: 8192
    enableha: false
    antiaffinitygroups:
      enabled: false
  antiaffinitygroups:
      enabled: false
  vips:
    # Used to connect to the Kubernetes API
    controlplanevip: "__USER_K8S_API_VIP__"
    # Shared by all services for ingress traffic
    ingressvip: "__USER_K8S_INGRESS_VIP__"
    # # Used for admin cluster addons (needed for multi cluster features). Must be the same
    # # across clusters
    # addonsvip: ""
  # A unique name for this cluster
  clustername: "${user_cluster_name}"
  # User cluster master nodes must have either 1 or 3 replicas
  masternode:
    cpus: 4
    memorymb: 8192
    # How many machines of this type to deploy
    replicas: ${anthos_user_master_replicas}
  # The number of worker nodes to deploy and their size. Min. 2 replicas
  workernode:
    cpus: ${anthos_user_vcpu}
    memorymb: ${anthos_user_memory_mb}
    # How many machines of this type to deploy
    replicas: ${anthos_user_worker_replicas}
  # The Kubernetes service CIDR range for the cluster
  serviceiprange: ${user_service_cidr}
  # The Kubernetes pod CIDR range for the cluster
  podiprange: ${user_pod_cidr}
  # # Uncomment this section to use OIDC authentication
  # oidc:
  #   issuerurl: ""
  #   clientid: ""
  #   username: ""
  #   usernameprefix: ""
  #   group: ""
  #   groupprefix: ""
  #   # # The absolute or relative path to the CA file (optional)
  #   # capath: ""
  # # Optionally provide an additional serving certificate for the API server
  # sni:
  #   certpath: ""
  #   keypath: ""
# Which load balancer mode to use "Manual" or "Integrated"
lbmode: Bundled
# Specify which GCP project to connect your GKE clusters to
gkeconnect:
  projectid: "${gcp_project_id}"
  # The absolute or relative path to the key file for a GCP service account used to
  # register the cluster
  registerserviceaccountkeypath: "/home/ubuntu/cluster/${register_key_name}"
  # The absolute or relative path to the key file for a GCP service account used by
  # the GKE connect agent
  agentserviceaccountkeypath: "/home/ubuntu/cluster/${connect_key_name}"
  # # Optionally enter a proxy to use for GKE Connect in the format http(s)://{proxy_address}
  # proxy: ""
# Specify which GCP project to connect your logs and metrics to
stackdriver:
  projectid: "${gcp_project_id}"
  # A GCP region where you would like to store logs and metrics for this cluster.
  clusterlocation: "${gcp_region}"
  # The name of a secret where proxy configuration can be found.
  enablevpc: false
  # The absolute or relative path to the key file for a GCP service account used to
  # send logs and metrics from the cluster
  serviceaccountkeypath: "/home/ubuntu/cluster/${stackdriver_key_name}"
# # Optionally use a private Docker registry to host GKE images
# privateregistryconfig:
#   # Do not include the scheme with your registry address
#   credentials:
#     address: ""
#     username: ""
#     password: ""
#   # The absolute or relative path to the CA certificate for this registry
#   cacertpath: ""
# The absolute or relative path to the GCP service account key that will be used to
# pull GKE images
gcrkeypath: "/home/ubuntu/cluster/${whitelisted_key_name}"
cloudrun:
  enabled: True
